@page "/panelmenu"
@using System.ComponentModel;

<RadzenExample Name="PanelMenu">

     <div class="row px-3">
        <div class="col-md-6 p-3">
            <RadzenCard Style="width: fit-content" Class="mx-auto">
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Statically declared items</RadzenText>
                <RadzenPanelMenu Style="width:300px">
                    <RadzenPanelMenuItem Text="General" Icon="home">
                        <RadzenPanelMenuItem Text="Buttons" Path="buttons" Icon="account_circle"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Menu" Path="menu" Icon="line_weight"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="FileInput" Path="fileinput" Icon="attach_file"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Dialog" Path="dialog" Icon="perm_media"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Notification" Path="notification" Icon="announcement"></RadzenPanelMenuItem>
                    </RadzenPanelMenuItem>
                    <RadzenPanelMenuItem Text="Inputs" Icon="payment">
                        <RadzenPanelMenuItem Text="CheckBox" Path="checkbox" Icon="check_circle"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="TextBox" Path="textbox" Icon="input"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="TextArea" Path="textarea" Icon="description"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Password" Path="password" Icon="payment"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Numeric" Path="numeric" Icon="aspect_ratio"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="DatePicker" Path="datepicker" Icon="date_range"></RadzenPanelMenuItem>
                    </RadzenPanelMenuItem>
                    <RadzenPanelMenuItem Text="Data" Icon="save">
                        <RadzenPanelMenuItem Text="DataGrid" Path="datagrid" Icon="grid_on"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="DataList" Path="datalist" Icon="list"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="DropDown" Path="dropdown" Icon="dns"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="DropDownDataGrid" Path="dropdown-datagrid" Icon="receipt"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="ListBox" Path="listbox" Icon="view_list"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="TemplateForm" Path="templateform" Icon="line_style"></RadzenPanelMenuItem>
                    </RadzenPanelMenuItem>
                    <RadzenPanelMenuItem Text="Containers" Icon="account_box">
                        <RadzenPanelMenuItem Text="Tabs" Path="tabs" Icon="tab"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Panel" Path="panel" Icon="content_paste"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Fieldset" Path="fieldset" Icon="account_balance_wallet"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Card" Path="card" Icon="line_style"></RadzenPanelMenuItem>
                    </RadzenPanelMenuItem>
                    <RadzenPanelMenuItem Text="More">
                        <RadzenPanelMenuItem Text="Item1"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="Item2"></RadzenPanelMenuItem>
                        <RadzenPanelMenuItem Text="More items">
                            <RadzenPanelMenuItem Text="More sub items">
                                <RadzenPanelMenuItem Text="Item1"></RadzenPanelMenuItem>
                                <RadzenPanelMenuItem Text="Item2"></RadzenPanelMenuItem>
                            </RadzenPanelMenuItem>
                        </RadzenPanelMenuItem>
                    </RadzenPanelMenuItem>
                </RadzenPanelMenu>
            </RadzenCard>
        </div>
        <div class="col-md-6 p-3">
             <RadzenCard Style="width: fit-content" Class="mx-auto">
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Programmatically created items with single expand</RadzenText>
                <RadzenPanelMenu Style="width:300px">
                    <ChildContent>
                        @foreach (var item in data)
                        {
                            <RadzenPanelMenuItem Text="@item.Text" @bind-Expanded="@item.Expanded">
                                <ChildContent>
                                   @foreach (var subItem in item.Items)
                                   {
                                        <RadzenPanelMenuItem Text="@subItem.Text"  />
                                   }
                                </ChildContent>
                             </RadzenPanelMenuItem>
                         }
                    </ChildContent>
                </RadzenPanelMenu>
             </RadzenCard>
        </div>
    </div>
    

</RadzenExample>
@code {
    static List<MenuModel> data = Enumerable.Range(0, 5).Select(i => new MenuModel()
    {
        Text = $"Menu{i}",
        Items = Enumerable.Range(0, 5).Select(j => new MenuModel()
        {
            Text = $"SubMenu{i}{j}"
        })
    }).ToList();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        data.ForEach(i => i.Siblings = data.Where(j => j != i));
    }

    public class MenuModel : INotifyPropertyChanged
    { 
        public MenuModel Parent { get; set; }
        public string Text { get; set; }

        bool _expanded;
        public bool Expanded 
        {
            get
            {
                return _expanded;    
            }
            set
            {
                if (_expanded != value)
                {
                    Siblings?.ToList().ForEach(s => s.Expanded = false);

                    _expanded = value;
                    OnPropertyChanged(nameof(Expanded));
                }
            }
        }

        public IEnumerable<MenuModel> Items { get; set; }
        public IEnumerable<MenuModel> Siblings { get; set; }

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) 
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}